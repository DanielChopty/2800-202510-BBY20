<!DOCTYPE html>
<html lang="en">

<head>
  <meta charset="UTF-8">
  <title>Create a Poll</title>
  <meta name="viewport" content="width=device-width, initial-scale=1">
  <!-- Bootstrap 5 CDN -->
  <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css" rel="stylesheet">
</head>

<body>

  <%- include('templates/header') %>

    <div class="container py-5">
      <div class="row justify-content-center">
        <div class="col-lg-8">
          <h2 class="mb-4 text-center text-primary">Create a New Poll</h2>

          <!-- Redirect Error Check -->
          <% if (redirectError) { %>
            <div class="alert alert-warning">
              <%= redirectError %>
            </div>
          <% } %>

          <form method="POST" action="/createPoll">
            <!-- Poll Question -->
            <div class="mb-3">
              <label for="question" class="form-label">Poll Question <span class="text-danger">*</span></label>
              <input type="text" name="title" class="form-control" id="question" placeholder="Enter the poll question" value="<%= formData.title || '' %>">
            </div>

            <!-- Description -->
            <div class="mb-3">
              <label for="description" class="form-label">Description</label>
              <textarea class="form-control" id="description" name="description" rows="3"
                placeholder="Enter a short description for the poll..."><%= formData.description || '' %></textarea>
            </div>

            <!-- Options -->
            <div class="mb-3">
              <label class="form-label">
                Options
                <small class="text-muted">(Enter at least two)</small>
              </label>
              <% 
                const opts = Array.isArray(formData.options)
                  ? formData.options.concat('','','','').slice(0,4)
                  : ['','','',''];
              %>
              <% opts.forEach((opt, i) => { %>
                <div class="mb-2">
                  <label for="option<%= i %>" class="form-label">
                    Option <%= i+1 %>
                    <% if (i < 2) { %>
                      <span class="text-danger">*</span>
                    <% } else { %>
                      <small class="text-muted">(optional)</small>
                    <% } %>
                  </label>
                  <input
                    type="text"
                    id="option<%= i %>"
                    name="options[]"
                    class="form-control"
                    placeholder="Enter option <%= i+1 %>"
                    value="<%= opt %>"
                  >
                </div>
              <% }) %>
            </div>

            <!-- Importance -->
            <div class="mb-3">
              <label for="importance" class="form-label">Importance <span class="text-danger">*</span></label>
              <select class="form-select" name="importance" id="importance">
                <option disabled <%= !formData.importance ? 'selected' : '' %>>Choose importance</option>
                <% ['Low','Medium','High'].forEach(level => { %>
                  <option <%= formData.importance===level ? 'selected' : '' %>><%= level %></option>
                <% }) %>
              </select>
            </div>

            <!-- Start and End Dates -->
            <div class="row mb-3">
              <div class="col">
                <label for="startDate" class="form-label">Start Date <span class="text-danger">*</span></label>
                <input type="date" name="startDate" class="form-control" id="startDate" value="<%= formData.startDate || '' %>">
              </div>
              <div class="col">
                <label for="endDate" class="form-label">End Date <span class="text-danger">*</span></label>
                <input type="date" name="endDate" class="form-control" id="endDate" value="<%= formData.endDate || '' %>">
              </div>
            </div>

            <!-- Visibility -->
            <div class="mb-3">
              <label for="visibility" class="form-label">Visibility <span class="text-danger">*</span></label>
              <select class="form-select" name="visibility" id="visibility">
                <option disabled <%= !formData.visibility ? 'selected' : '' %>>Select visibility</option>
                <% ['Public','Internal'].forEach(vis => { %>
                  <option <%= formData.visibility===vis ? 'selected' : '' %>><%= vis %></option>
                <% }) %>
              </select>
            </div>

            <div class="mb-3">
              <label class="form-label">Tags</label>
              <div class="d-flex flex-wrap gap-2" role="group" aria-label="Tag selection">
                <input type="checkbox" class="btn-check" id="tag1" autocomplete="off" value="#DailyLife">
                <label class="btn btn-outline-primary" for="tag1">#DailyLife</label>

                <input type="checkbox" class="btn-check" id="tag2" autocomplete="off" value="#CulturalViews">
                <label class="btn btn-outline-primary" for="tag2">#CulturalViews</label>

                <input type="checkbox" class="btn-check" id="tag3" autocomplete="off" value="#FamilyMatters">
                <label class="btn btn-outline-primary" for="tag3">#FamilyMatters</label>

                <input type="checkbox" class="btn-check" id="tag4" autocomplete="off" value="#MoralChoices">
                <label class="btn btn-outline-primary" for="tag4">#MoralChoices</label>

                <input type="checkbox" class="btn-check" id="tag5" autocomplete="off" value="#PersonalValues">
                <label class="btn btn-outline-primary" for="tag5">#PersonalValues</label>

                <input type="checkbox" class="btn-check" id="tag6" autocomplete="off" value="#PublicOpinion">
                <label class="btn btn-outline-primary" for="tag6">#PublicOpinion</label>
              </div>

              <div id="selectedTags" class="mt-2"></div>
              <input type="hidden" name="tags" id="tagsInput">
            </div>

            <% if (submitErrors && submitErrors.length) { %>
              <div class="alert alert-warning mt-3">
                <ul class="mb-0">
                  <% submitErrors.forEach(error => { %>
                    <li><%= error %></li>
                  <% }) %>
                </ul>
              </div>
            <% } %>

            <!-- Submit & Reset Button -->
            <div class="text-center">
              <button type="submit" class="btn btn-primary">Submit Poll</button>
              <button type="button" id="resetBtn" class="btn btn-outline-secondary ms-2">Reset</button>             
            </div>
          </form>
        </div>
      </div>
    </div>

    <%- include('templates/footer') %>

      <!-- Bootstrap JS (Optional for functionality like dropdowns) -->
      <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/js/bootstrap.bundle.min.js"></script>

      <!-- SweetAlert scripts (for poll creation confirmation and acknowledgement) -->
      <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>

      <script>
        // Confirmation before submitting the form
        const form = document.querySelector('form');
        form.addEventListener('submit', function (event) {
          event.preventDefault();

          Swal.fire({
            title: 'Are you sure?',
            text: 'Do you want to create this poll?',
            icon: 'question',
            showCancelButton: true,
            confirmButtonText: 'Yes, create it!',
            cancelButtonText: 'Cancel',
            confirmButtonColor: '#07cf00'
          }).then((result) => {
            if (result.isConfirmed) {
              form.submit();
            }
          });
        });

        // Tag Selection Logic
        const tagCheckboxes = document.querySelectorAll('.btn-check');
        const tagsInput = document.getElementById('tagsInput');
        const selectedTagsContainer = document.getElementById('selectedTags');

        function updateSelectedTags() {
          const selected = Array.from(tagCheckboxes)
            .filter(cb => cb.checked)
            .map(cb => cb.value);

          tagsInput.value = selected.join(',');

          selectedTagsContainer.innerHTML = '';
          selected.forEach(tag => {
            const badge = document.createElement('span');
            badge.className = 'badge bg-info text-dark me-1';
            badge.textContent = tag;
            selectedTagsContainer.appendChild(badge);
          });
        }

        tagCheckboxes.forEach(cb => cb.addEventListener('change', updateSelectedTags));
      </script>

      <% if (typeof created !=='undefined' && created) { %>
        <script>
          Swal.fire({
            icon: 'success',
            title: 'Poll Created!',
            text: 'Your poll was successfully created.',
            confirmButtonColor: '#003366'
          }).then(() => {
            window.location.href = '/polls';
          });
        </script>
        <% } %>

        <script>
          document.getElementById('resetBtn').addEventListener('click', function() {
            Swal.fire({
              title: 'Clear all fields?',
              text: 'This will erase everything youâ€™ve entered.',
              icon: 'warning',
              showCancelButton: true,
              confirmButtonText: 'Yes, reset',
              cancelButtonText: 'Cancel',
              confirmButtonColor: '#d33'
            }).then(result => {
              if (result.isConfirmed) {
                document.querySelector('form').reset();

                document.getElementById('selectedTags').innerHTML = '';
                document.getElementById('tagsInput').value = '';
              }
            });
          });
        </script>

</body>
</html>
