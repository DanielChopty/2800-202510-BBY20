<!DOCTYPE html>
<html lang="en">

<head>
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1.0" />
  <title>Past Polls - <%= user.name %>
  </title>
  <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css" rel="stylesheet" />
  <link href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.11.3/font/bootstrap-icons.css" rel="stylesheet" />

  <style>
    /* Brand Colors */
    .btn-site-blue {
      background-color: #003366 !important;
      color: #ffffff !important;
      border: none !important;
      transition: background-color 0.3s ease;
    }

    .btn-site-blue:hover {
      background-color: #002244 !important;
    }

    .btn-site-orange {
      background-color: #f36f21 !important;
      color: #ffffff !important;
      border: none !important;
      transition: background-color 0.3s ease;
    }

    .btn-site-orange:hover {
      background-color: #d95e18 !important;
    }

    .btn-maroon {
      background-color: #800000 !important;
      /* Maroon */
      color: #ffffff !important;
      border: none !important;
      transition: background-color 0.3s ease;
    }

    .btn-maroon:hover {
      background-color: #660000 !important;
      /* Darker maroon on hover */
    }

    /* Action Buttons (Edit/Delete/Details) */
    .btn-edit-grey,
    .btn-delete-red,
    .btn-view-green {
      width: 2.5rem;
      height: 2.5rem;
      color: #ffffff !important;
      border: none !important;
      transition: background-color 0.3s ease;
      font-size: 1.25rem;
      border-radius: 0.5rem;
      display: flex;
      align-items: center;
      justify-content: center;
      padding: 0;
    }

    .btn-edit-grey {
      background-color: #6c757d !important;
    }

    .btn-edit-grey:hover {
      background-color: #5a6268 !important;
    }

    .btn-delete-red {
      background-color: #dc3545 !important;
    }

    .btn-delete-red:hover {
      background-color: #b02a37 !important;
    }

    .btn-view-green {
      background-color: #198754 !important;
    }

    .btn-view-green:hover {
      background-color: #146c43 !important;
    }

    .description-text {
      display: block;
      max-width: 100%;
      white-space: normal;
      word-wrap: break-word;
      overflow-wrap: break-word;
      /* Extra safety */
    }

    .list-group-item .d-flex {
      align-items: flex-start;
      /* Prevent vertical alignment issues */
    }

    .btn-group[role="group"] {
      padding-left: 0;
      padding-right: 0;
      margin-left: 0;
    }

    #editPollModal .modal-body .btn-group[role="group"] {
      margin-left: 0.25rem;
    }

    .btn-outline-primary {
      text-align: center;
    }

    .poll-content {
      flex: 1;
      min-width: 0;
      max-width: 85%;
    }

    @media (max-width: 1000px) {
      .poll-content {
        /* Leaves space for buttons on smaller screen widths */
        max-width: calc(100% - 120px);
      }
    }
  </style>
</head>

<body class="bg-light">
  <%- include('templates/header') %>

    <div class="container my-5">
      <div class="card shadow border-0 rounded-4 p-4">
        <h1 class="mb-4">Your Polls</h1>

        <!-- Sort Controls -->
        <div class="d-flex justify-content-start gap-3 mb-3">

          <!-- Sort alphabetically -->
          <a href="/pastpolls?sort=all" class="btn btn-site-blue text-white"
            style="<%= (!sort || sort === 'all') ? 'outline: 3px solid #FFD700; outline-offset: 2px;' : '' %>">
            Sort Alphabetically
          </a>

          <!-- Sort by importance -->
          <a href="/pastpolls?sort=importance" class="btn btn-site-orange text-white"
            style="<%= (sort === 'importance') ? 'outline: 3px solid #FFD700; outline-offset: 2px;' : '' %>">
            Sort by Importance
          </a>

          <!-- Sort by creation date -->
          <a href="/pastpolls?sort=date" class="btn btn-maroon text-white"
            style="<%= (sort === 'date') ? 'outline: 3px solid #FFD700; outline-offset: 2px;' : '' %>">
            Sort by Creation Date
          </a>

        </div>

        <hr>

        <!-- Primary polls display; displays only your polls -->
        <% if (polls.length===0) { %>
          <p class="text-muted">You haven't created any polls yet.</p>
          <% } else { %>
            <div class="list-group">
              <% polls.forEach(poll=> { %>
                <div class="list-group-item list-group-item-action mb-3 rounded-3 shadow-sm p-3">
                  <div class="d-flex justify-content-between align-items-center">

                    <div class="poll-content">

                      <!-- Primary details (always visible) -->
                      <div class="d-flex align-items-baseline mb-3">
                        <h5 class="mb-0 me-3 fw-bold">
                          <%= poll.title %>
                        </h5>
                        <a href="javascript:void(0);" id="toggle-<%= poll._id %>"
                          class="text-decoration-underline text-primary fw-semibold fs-5 align-middle"
                          onclick="toggleDetails('<%= poll._id %>', `<%= poll.description ? poll.description.replace(/`/g, '\\`') : 'No description provided.' %>`)">
                          expand
                        </a>
                      </div>

                      <p class="mb-1 text-muted">Available:
                        <strong>
                          <%= poll.available ? 'Yes' : 'No' %>
                        </strong>
                      </p>
                      <% if (poll.importance) { %>
                        <p class="mb-1 text-muted">Importance: <strong>
                            <%= poll.importance %>
                          </strong></p>
                        <% } %>

                          <!-- Additional details (visible only if the user clicks 'expand')-->
                          <p class="mb-1 text-muted description-text" id="desc-<%= poll._id %>">
                            <% if (!poll.description) { %>
                              No description provided.
                              <% } else if (poll.description.length> 80) { %>
                                <%= poll.description.substring(0, 80) + '...' %>
                                  <% } else { %>
                                    <%= poll.description %>
                                      <% } %>
                          </p>
                          <div id="details-<%= poll._id %>" style="display: none;" class="mt-3">
                            <p class="mb-1 text-muted">Answer Options:</p>
                            <ul>
                              <% poll.choices.forEach(choice=> { %>
                                <li>
                                  <%= choice.text %> - <strong>
                                      <%= choice.votes %>
                                    </strong> votes
                                </li>
                                <% }); %>
                            </ul>
                            <p class="mb-1 text-muted">Start Date: <strong>
                                <%= poll.startDate ? new Date(poll.startDate).toLocaleDateString() : 'Not Set' %>
                              </strong></p>
                            <p class="mb-1 text-muted">End Date: <strong>
                                <%= poll.endDate ? new Date(poll.endDate).toLocaleDateString() : 'Not Set' %>
                              </strong></p>
                            <!-- Tags Section -->
                            <p class="mt-3 mb-1 text-muted">Tags:</p>
                            <div class="mb-2">
                              <% if (poll.tags && poll.tags.length> 0) {
                                const tagsArray = Array.isArray(poll.tags) ? poll.tags : poll.tags.split(',');
                                tagsArray.forEach(tag => { %>
                                <span class="badge bg-info text-dark me-1 mb-1">
                                  <%= tag.trim() %>
                                </span>
                                <% }); } else { %>
                                  <span class="text-muted">No tags provided.</span>
                                  <% } %>
                            </div>
                          </div>
                          <small class="d-block mt-3">Created on: <%= new Date(poll.createdAt).toLocaleDateString() %>
                          </small>
                    </div>

                    <!-- Edit button -->
                    <div class="d-flex flex-column gap-3 me-3" style="flex-shrink: 0;">
                      <button class="btn btn-edit-grey" title="Edit Poll"
                        onclick='openEditModal(<%- JSON.stringify(poll) %>)'>
                        <i class="bi bi-pencil-square"></i>
                      </button>

                      <!-- Delete button -->
                      <form onsubmit="return confirmDelete(event, '<%= poll._id %>')" id="delete-form-<%= poll._id %>"
                        method="POST" action="/deletepoll/<%= poll._id %>">
                        <button type="submit" class="btn btn-delete-red" title="Delete Poll">
                          <i class="bi bi-trash"></i>
                        </button>
                      </form>

                      <!-- Full poll detail button -->
                      <a href="/poll/<%= poll._id %>" class="btn btn-view-green text-white"
                        title="View Extended Details">
                        <i class="bi bi-arrow-bar-right"></i>
                      </a>

                    </div>
                  </div>
                </div>
                <% }); %>
            </div>
            <% } %>
      </div>
    </div>

    <!-- Edit Poll Modal -->
    <div class="modal fade" id="editPollModal" tabindex="-1" aria-labelledby="editPollModalLabel" aria-hidden="true">
      <div class="modal-dialog modal-lg">
        <form id="editPollForm" method="POST" onsubmit="return confirmEdit(event);">
          <div class="modal-content">
            <div class="modal-header">
              <h5 class="modal-title text-primary" id="editPollModalLabel">Edit Poll</h5>
              <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
              <input type="hidden" id="pollId" name="pollId">

              <!-- Question -->
              <div class="mb-3">
                <label for="title" class="form-label">Poll Question</label>
                <input type="text" class="form-control" id="title" name="title" placeholder="Enter the poll question"
                  required>
              </div>

              <!-- Description -->
              <div class="mb-3">
                <label for="description" class="form-label">Description</label>
                <textarea class="form-control" id="description" name="description" rows="3"
                  placeholder="Enter a short description for the poll..."></textarea>
              </div>

              <!-- Options -->
              <div class="mb-3">
                <label class="form-label">Options (Enter at least two)</label>
                <input type="text" name="options[]" class="form-control mb-2 option-input" placeholder="Option 1">
                <input type="text" name="options[]" class="form-control mb-2 option-input" placeholder="Option 2">
                <input type="text" name="options[]" class="form-control mb-2 option-input"
                  placeholder="Option 3 (optional)">
                <input type="text" name="options[]" class="form-control option-input" placeholder="Option 4 (optional)">
              </div>

              <!-- Importance -->
              <div class="mb-3">
                <label for="importance" class="form-label">Importance</label>
                <select class="form-select" id="importance" name="importance" required>
                  <option disabled selected>Choose importance</option>
                  <option value="Low">Low</option>
                  <option value="Medium">Medium</option>
                  <option value="High">High</option>
                </select>
              </div>

              <!-- Start and End Dates -->
              <div class="row mb-3">
                <div class="col">
                  <label for="startDate" class="form-label">Start Date</label>
                  <input type="date" class="form-control" id="startDate" name="startDate">
                </div>
                <div class="col">
                  <label for="endDate" class="form-label">End Date</label>
                  <input type="date" class="form-control" id="endDate" name="endDate">
                </div>
              </div>

              <!-- Availability -->
              <div class="mb-3">
                <label for="available" class="form-label">Availability</label>
                <select class="form-select" id="available" name="available">
                  <option value="true">Yes</option>
                  <option value="false">No</option>
                </select>
              </div>
            </div>

            <!-- Tags -->
            <div class="mb-3">
              <div class="form-control p-3">
                <label class="form-label">Tags</label>
                <div class="btn-group" role="group" aria-label="Tag selection">
                  <!-- Tag Checkboxes -->
                  <input type="checkbox" class="btn-check" id="editTag1" name="tags[]" value="#DailyLife"
                    autocomplete="off">
                  <label class="btn btn-outline-primary" for="editTag1">#DailyLife</label>

                  <input type="checkbox" class="btn-check" id="editTag2" name="tags[]" value="#CulturalViews"
                    autocomplete="off">
                  <label class="btn btn-outline-primary" for="editTag2">#CulturalViews</label>

                  <input type="checkbox" class="btn-check" id="editTag3" name="tags[]" value="#FamilyMatters"
                    autocomplete="off">
                  <label class="btn btn-outline-primary" for="editTag3">#FamilyMatters</label>

                  <input type="checkbox" class="btn-check" id="editTag4" name="tags[]" value="#MoralChoices"
                    autocomplete="off">
                  <label class="btn btn-outline-primary" for="editTag4">#MoralChoices</label>

                  <input type="checkbox" class="btn-check" id="editTag5" name="tags[]" value="#PersonalValues"
                    autocomplete="off">
                  <label class="btn btn-outline-primary" for="editTag5">#PersonalValues</label>

                  <input type="checkbox" class="btn-check" id="editTag6" name="tags[]" value="#PublicOpinion"
                    autocomplete="off">
                  <label class="btn btn-outline-primary" for="editTag6">#PublicOpinion</label>
                </div>
                <div id="editSelectedTags" class="mt-2"></div>
              </div>
            </div>

            <div class="modal-footer">
              <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
              <button type="submit" class="btn btn-site-orange text-white">Save Changes</button>
            </div>
          </div>
        </form>
      </div>
    </div>

    <%- include('templates/footer') %>

      <!-- Bootstrap and SweetAlert scripts -->
      <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/js/bootstrap.bundle.min.js"></script>
      <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>

      <!-- Client-side scripts -->
      <script>
        // Script to open the edit modal
        function openEditModal(poll) {
          document.getElementById('pollId').value = poll._id;
          document.getElementById('title').value = poll.title || '';
          document.getElementById('description').value = poll.description || '';
          document.getElementById('importance').value = poll.importance || 'Low';
          document.getElementById('available').value = poll.available ? 'true' : 'false';

          // Pre-fill options based on poll.choices
          const optionInputs = document.querySelectorAll('.option-input');
          for (let i = 0; i < optionInputs.length; i++) {
            optionInputs[i].value = poll.choices && poll.choices[i] ? poll.choices[i].text : '';
          }

          // Pre-fill start and end dates if they exist
          if (poll.startDate) {
            const startDate = new Date(poll.startDate).toISOString().split('T')[0];
            document.getElementById('startDate').value = startDate;
          } else {
            document.getElementById('startDate').value = '';
          }

          if (poll.endDate) {
            const endDate = new Date(poll.endDate).toISOString().split('T')[0];
            document.getElementById('endDate').value = endDate;
          } else {
            document.getElementById('endDate').value = '';
          }

          // Pre-select tags and display selected badges
          const editTagCheckboxes = document.querySelectorAll('.btn-check[name="tags[]"]');
          const editSelectedTagsContainer = document.getElementById('editSelectedTags');

          // Clear previous selections
          editTagCheckboxes.forEach(cb => cb.checked = false);
          editSelectedTagsContainer.innerHTML = '';

          if (poll.tags) {
            const tagsArray = Array.isArray(poll.tags) ? poll.tags : poll.tags.split(',');
            tagsArray.forEach(tag => {
              const trimmedTag = tag.trim();
              const checkbox = document.querySelector(`.btn-check[name="tags[]"][value="${trimmedTag}"]`);
              if (checkbox) {
                checkbox.checked = true;

                const badge = document.createElement('span');
                badge.className = 'badge bg-info text-dark me-1';
                badge.textContent = trimmedTag;
                editSelectedTagsContainer.appendChild(badge);
              }
            });
          }

          // Update badges when checkboxes change
          editTagCheckboxes.forEach(cb => {
            cb.addEventListener('change', () => {
              const selected = Array.from(editTagCheckboxes)
                .filter(cb => cb.checked)
                .map(cb => cb.value);

              editSelectedTagsContainer.innerHTML = '';
              selected.forEach(tag => {
                const badge = document.createElement('span');
                badge.className = 'badge bg-info text-dark me-1';
                badge.textContent = tag;
                editSelectedTagsContainer.appendChild(badge);
              });
            });
          });

          // Set form action dynamically
          const editForm = document.getElementById('editPollForm');
          editForm.action = `/editpoll/${poll._id}`;

          // Show the Bootstrap modal
          const modal = new bootstrap.Modal(document.getElementById('editPollModal'));
          modal.show();
        }

        // Script to toggle the full description upon clicking 'expand'
        function toggleDetails(id, fullText) {
          const descElement = document.getElementById(`desc-${id}`);
          const toggleLink = document.getElementById(`toggle-${id}`);
          const detailsElement = document.getElementById(`details-${id}`);

          if (descElement.dataset.expanded === 'true') {
            if (fullText.length > 80) {
              descElement.innerHTML = fullText.substring(0, 80) + '...';
            } else {
              descElement.innerHTML = fullText;
            }
            detailsElement.style.display = 'none';
            descElement.dataset.expanded = 'false';
            toggleLink.textContent = 'expand';
          } else {
            const formattedText = fullText.replace(/\n/g, '<br>');
            descElement.innerHTML = formattedText;
            detailsElement.style.display = 'block';
            descElement.dataset.expanded = 'true';
            toggleLink.textContent = 'collapse';
          }
        }

        // Delete poll confirmation script 
        function confirmDelete(event, pollId) {
          event.preventDefault();
          Swal.fire({
            title: 'Are you sure?',
            text: 'This poll will be permanently deleted.',
            icon: 'warning',
            showCancelButton: true,
            confirmButtonText: 'Yes, delete it!',
            cancelButtonText: 'Cancel',
            confirmButtonColor: '#dc3545'
          }).then((result) => {
            if (result.isConfirmed) {
              document.getElementById(`delete-form-${pollId}`).submit();
            }
          });
          return false;
        }

        // Edit poll confirmation script
        function confirmEdit(event) {
          event.preventDefault();
          Swal.fire({
            title: 'Are you sure?',
            text: 'Do you want to save these changes to the poll?',
            icon: 'question',
            showCancelButton: true,
            confirmButtonText: 'Yes, save them!',
            cancelButtonText: 'Cancel',
            confirmButtonColor: '#f36f21'
          }).then((result) => {
            if (result.isConfirmed) {
              document.getElementById('editPollForm').submit();
            }
          });
          return false;
        }

        // Event listener to give acknowledgement message that poll has been deleted/edited
        window.addEventListener('DOMContentLoaded', () => {
          const urlParams = new URLSearchParams(window.location.search);

          if (urlParams.get('deleted') === 'true') {
            Swal.fire({
              icon: 'success',
              title: 'Poll Deleted',
              text: 'The poll was successfully deleted.',
              confirmButtonColor: '#003366'
            }).then(() => {
              const newUrl = window.location.origin + window.location.pathname;
              window.history.replaceState({}, document.title, newUrl);
            });
          }

          if (urlParams.get('edited') === 'true') {
            Swal.fire({
              icon: 'success',
              title: 'Poll Edited',
              text: 'The poll was successfully updated.',
              confirmButtonColor: '#003366'
            }).then(() => {
              const newUrl = window.location.origin + window.location.pathname;
              window.history.replaceState({}, document.title, newUrl);
            });
          }
        });

      </script>

</body>
</html>
